# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Run test coverage on each push

on: push

env:
  NEXT_PUBLIC_IMAGE_LOADER_URL: https://acter-dev.imgix.net

jobs:
  checkout-install-schema:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Set up Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Yarn cache
        uses: c-hive/gha-yarn-cache@v2

      - name: Next.js build cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/packages/web/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]sx?') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: yarn install
        run: |
          yarn

      - name: generate schema
        run: |
          yarn workspace @acter/schema build

      - name: zip
        run: tar --exclude='./.git' --exclude='./.yarn/cache' --use-compress-program zstd -cf /tmp/workspace.tzst .

      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: /tmp/workspace.tzst

  lint:
    runs-on: ubuntu-latest
    needs: checkout-install-schema
    steps:
      - uses: actions/checkout@master
      - uses: './.github/actions/download-artifact'

      - name: lint
        run: |
          yarn lint

  test-cover:
    runs-on: ubuntu-latest
    needs: checkout-install-schema
    steps:
      - uses: actions/checkout@master
      - uses: './.github/actions/download-artifact'

      - name: coverage tests
        run: |
          yarn cover

  build-web:
    runs-on: ubuntu-latest
    needs: checkout-install-schema
    steps:
      - uses: actions/checkout@master
      - uses: './.github/actions/download-artifact'

      - name: build web
        run: |
          yarn workspace @acter/web build

  delete-artifacts:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [lint, test-cover, build-web]
    steps:
      - name: delete artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: workspace
