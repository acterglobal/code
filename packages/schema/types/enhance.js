"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyArgsTypesEnhanceMap = exports.applyInputTypesEnhanceMap = exports.applyOutputTypesEnhanceMap = exports.applyModelsEnhanceMap = exports.applyRelationResolversEnhanceMap = exports.applyResolversEnhanceMap = void 0;
const crudResolvers = __importStar(require("./resolvers/crud/resolvers-crud.index"));
const actionResolvers = __importStar(require("./resolvers/crud/resolvers-actions.index"));
const relationResolvers = __importStar(require("./resolvers/relations/resolvers.index"));
const models = __importStar(require("./models"));
const outputTypes = __importStar(require("./resolvers/outputs"));
const inputTypes = __importStar(require("./resolvers/inputs"));
const argsTypes = __importStar(require("./resolvers/crud/args.index"));
const crudResolversMap = {
    Acter: crudResolvers.ActerCrudResolver,
    ActerConnection: crudResolvers.ActerConnectionCrudResolver,
    ActerInterest: crudResolvers.ActerInterestCrudResolver,
    ActerType: crudResolvers.ActerTypeCrudResolver,
    ActerTypeRule: crudResolvers.ActerTypeRuleCrudResolver,
    Activity: crudResolvers.ActivityCrudResolver,
    ActivityType: crudResolvers.ActivityTypeCrudResolver,
    Post: crudResolvers.PostCrudResolver,
    Link: crudResolvers.LinkCrudResolver,
    Interest: crudResolvers.InterestCrudResolver,
    InterestType: crudResolvers.InterestTypeCrudResolver,
    Invite: crudResolvers.InviteCrudResolver,
    Notification: crudResolvers.NotificationCrudResolver,
    User: crudResolvers.UserCrudResolver
};
const relationResolversMap = {
    Acter: relationResolvers.ActerRelationsResolver,
    ActerConnection: relationResolvers.ActerConnectionRelationsResolver,
    ActerInterest: relationResolvers.ActerInterestRelationsResolver,
    ActerType: relationResolvers.ActerTypeRelationsResolver,
    ActerTypeRule: relationResolvers.ActerTypeRuleRelationsResolver,
    Activity: relationResolvers.ActivityRelationsResolver,
    ActivityType: relationResolvers.ActivityTypeRelationsResolver,
    Post: relationResolvers.PostRelationsResolver,
    Link: relationResolvers.LinkRelationsResolver,
    Interest: relationResolvers.InterestRelationsResolver,
    InterestType: relationResolvers.InterestTypeRelationsResolver,
    Invite: relationResolvers.InviteRelationsResolver,
    Notification: relationResolvers.NotificationRelationsResolver,
    User: relationResolvers.UserRelationsResolver
};
const actionResolversMap = {
    Acter: {
        acter: actionResolvers.FindUniqueActerResolver,
        findFirstActer: actionResolvers.FindFirstActerResolver,
        acters: actionResolvers.FindManyActerResolver,
        createActer: actionResolvers.CreateActerResolver,
        createManyActer: actionResolvers.CreateManyActerResolver,
        deleteActer: actionResolvers.DeleteActerResolver,
        updateActer: actionResolvers.UpdateActerResolver,
        deleteManyActer: actionResolvers.DeleteManyActerResolver,
        updateManyActer: actionResolvers.UpdateManyActerResolver,
        upsertActer: actionResolvers.UpsertActerResolver,
        aggregateActer: actionResolvers.AggregateActerResolver,
        groupByActer: actionResolvers.GroupByActerResolver
    },
    ActerConnection: {
        acterConnection: actionResolvers.FindUniqueActerConnectionResolver,
        findFirstActerConnection: actionResolvers.FindFirstActerConnectionResolver,
        acterConnections: actionResolvers.FindManyActerConnectionResolver,
        createActerConnection: actionResolvers.CreateActerConnectionResolver,
        createManyActerConnection: actionResolvers.CreateManyActerConnectionResolver,
        deleteActerConnection: actionResolvers.DeleteActerConnectionResolver,
        updateActerConnection: actionResolvers.UpdateActerConnectionResolver,
        deleteManyActerConnection: actionResolvers.DeleteManyActerConnectionResolver,
        updateManyActerConnection: actionResolvers.UpdateManyActerConnectionResolver,
        upsertActerConnection: actionResolvers.UpsertActerConnectionResolver,
        aggregateActerConnection: actionResolvers.AggregateActerConnectionResolver,
        groupByActerConnection: actionResolvers.GroupByActerConnectionResolver
    },
    ActerInterest: {
        acterInterest: actionResolvers.FindUniqueActerInterestResolver,
        findFirstActerInterest: actionResolvers.FindFirstActerInterestResolver,
        acterInterests: actionResolvers.FindManyActerInterestResolver,
        createActerInterest: actionResolvers.CreateActerInterestResolver,
        createManyActerInterest: actionResolvers.CreateManyActerInterestResolver,
        deleteActerInterest: actionResolvers.DeleteActerInterestResolver,
        updateActerInterest: actionResolvers.UpdateActerInterestResolver,
        deleteManyActerInterest: actionResolvers.DeleteManyActerInterestResolver,
        updateManyActerInterest: actionResolvers.UpdateManyActerInterestResolver,
        upsertActerInterest: actionResolvers.UpsertActerInterestResolver,
        aggregateActerInterest: actionResolvers.AggregateActerInterestResolver,
        groupByActerInterest: actionResolvers.GroupByActerInterestResolver
    },
    ActerType: {
        acterType: actionResolvers.FindUniqueActerTypeResolver,
        findFirstActerType: actionResolvers.FindFirstActerTypeResolver,
        acterTypes: actionResolvers.FindManyActerTypeResolver,
        createActerType: actionResolvers.CreateActerTypeResolver,
        createManyActerType: actionResolvers.CreateManyActerTypeResolver,
        deleteActerType: actionResolvers.DeleteActerTypeResolver,
        updateActerType: actionResolvers.UpdateActerTypeResolver,
        deleteManyActerType: actionResolvers.DeleteManyActerTypeResolver,
        updateManyActerType: actionResolvers.UpdateManyActerTypeResolver,
        upsertActerType: actionResolvers.UpsertActerTypeResolver,
        aggregateActerType: actionResolvers.AggregateActerTypeResolver,
        groupByActerType: actionResolvers.GroupByActerTypeResolver
    },
    ActerTypeRule: {
        acterTypeRule: actionResolvers.FindUniqueActerTypeRuleResolver,
        findFirstActerTypeRule: actionResolvers.FindFirstActerTypeRuleResolver,
        acterTypeRules: actionResolvers.FindManyActerTypeRuleResolver,
        createActerTypeRule: actionResolvers.CreateActerTypeRuleResolver,
        createManyActerTypeRule: actionResolvers.CreateManyActerTypeRuleResolver,
        deleteActerTypeRule: actionResolvers.DeleteActerTypeRuleResolver,
        updateActerTypeRule: actionResolvers.UpdateActerTypeRuleResolver,
        deleteManyActerTypeRule: actionResolvers.DeleteManyActerTypeRuleResolver,
        updateManyActerTypeRule: actionResolvers.UpdateManyActerTypeRuleResolver,
        upsertActerTypeRule: actionResolvers.UpsertActerTypeRuleResolver,
        aggregateActerTypeRule: actionResolvers.AggregateActerTypeRuleResolver,
        groupByActerTypeRule: actionResolvers.GroupByActerTypeRuleResolver
    },
    Activity: {
        activity: actionResolvers.FindUniqueActivityResolver,
        findFirstActivity: actionResolvers.FindFirstActivityResolver,
        activities: actionResolvers.FindManyActivityResolver,
        createActivity: actionResolvers.CreateActivityResolver,
        createManyActivity: actionResolvers.CreateManyActivityResolver,
        deleteActivity: actionResolvers.DeleteActivityResolver,
        updateActivity: actionResolvers.UpdateActivityResolver,
        deleteManyActivity: actionResolvers.DeleteManyActivityResolver,
        updateManyActivity: actionResolvers.UpdateManyActivityResolver,
        upsertActivity: actionResolvers.UpsertActivityResolver,
        aggregateActivity: actionResolvers.AggregateActivityResolver,
        groupByActivity: actionResolvers.GroupByActivityResolver
    },
    ActivityType: {
        activityType: actionResolvers.FindUniqueActivityTypeResolver,
        findFirstActivityType: actionResolvers.FindFirstActivityTypeResolver,
        activityTypes: actionResolvers.FindManyActivityTypeResolver,
        createActivityType: actionResolvers.CreateActivityTypeResolver,
        createManyActivityType: actionResolvers.CreateManyActivityTypeResolver,
        deleteActivityType: actionResolvers.DeleteActivityTypeResolver,
        updateActivityType: actionResolvers.UpdateActivityTypeResolver,
        deleteManyActivityType: actionResolvers.DeleteManyActivityTypeResolver,
        updateManyActivityType: actionResolvers.UpdateManyActivityTypeResolver,
        upsertActivityType: actionResolvers.UpsertActivityTypeResolver,
        aggregateActivityType: actionResolvers.AggregateActivityTypeResolver,
        groupByActivityType: actionResolvers.GroupByActivityTypeResolver
    },
    Post: {
        post: actionResolvers.FindUniquePostResolver,
        findFirstPost: actionResolvers.FindFirstPostResolver,
        posts: actionResolvers.FindManyPostResolver,
        createPost: actionResolvers.CreatePostResolver,
        createManyPost: actionResolvers.CreateManyPostResolver,
        deletePost: actionResolvers.DeletePostResolver,
        updatePost: actionResolvers.UpdatePostResolver,
        deleteManyPost: actionResolvers.DeleteManyPostResolver,
        updateManyPost: actionResolvers.UpdateManyPostResolver,
        upsertPost: actionResolvers.UpsertPostResolver,
        aggregatePost: actionResolvers.AggregatePostResolver,
        groupByPost: actionResolvers.GroupByPostResolver
    },
    Link: {
        link: actionResolvers.FindUniqueLinkResolver,
        findFirstLink: actionResolvers.FindFirstLinkResolver,
        links: actionResolvers.FindManyLinkResolver,
        createLink: actionResolvers.CreateLinkResolver,
        createManyLink: actionResolvers.CreateManyLinkResolver,
        deleteLink: actionResolvers.DeleteLinkResolver,
        updateLink: actionResolvers.UpdateLinkResolver,
        deleteManyLink: actionResolvers.DeleteManyLinkResolver,
        updateManyLink: actionResolvers.UpdateManyLinkResolver,
        upsertLink: actionResolvers.UpsertLinkResolver,
        aggregateLink: actionResolvers.AggregateLinkResolver,
        groupByLink: actionResolvers.GroupByLinkResolver
    },
    Interest: {
        interest: actionResolvers.FindUniqueInterestResolver,
        findFirstInterest: actionResolvers.FindFirstInterestResolver,
        interests: actionResolvers.FindManyInterestResolver,
        createInterest: actionResolvers.CreateInterestResolver,
        createManyInterest: actionResolvers.CreateManyInterestResolver,
        deleteInterest: actionResolvers.DeleteInterestResolver,
        updateInterest: actionResolvers.UpdateInterestResolver,
        deleteManyInterest: actionResolvers.DeleteManyInterestResolver,
        updateManyInterest: actionResolvers.UpdateManyInterestResolver,
        upsertInterest: actionResolvers.UpsertInterestResolver,
        aggregateInterest: actionResolvers.AggregateInterestResolver,
        groupByInterest: actionResolvers.GroupByInterestResolver
    },
    InterestType: {
        interestType: actionResolvers.FindUniqueInterestTypeResolver,
        findFirstInterestType: actionResolvers.FindFirstInterestTypeResolver,
        interestTypes: actionResolvers.FindManyInterestTypeResolver,
        createInterestType: actionResolvers.CreateInterestTypeResolver,
        createManyInterestType: actionResolvers.CreateManyInterestTypeResolver,
        deleteInterestType: actionResolvers.DeleteInterestTypeResolver,
        updateInterestType: actionResolvers.UpdateInterestTypeResolver,
        deleteManyInterestType: actionResolvers.DeleteManyInterestTypeResolver,
        updateManyInterestType: actionResolvers.UpdateManyInterestTypeResolver,
        upsertInterestType: actionResolvers.UpsertInterestTypeResolver,
        aggregateInterestType: actionResolvers.AggregateInterestTypeResolver,
        groupByInterestType: actionResolvers.GroupByInterestTypeResolver
    },
    Invite: {
        invite: actionResolvers.FindUniqueInviteResolver,
        findFirstInvite: actionResolvers.FindFirstInviteResolver,
        invites: actionResolvers.FindManyInviteResolver,
        createInvite: actionResolvers.CreateInviteResolver,
        createManyInvite: actionResolvers.CreateManyInviteResolver,
        deleteInvite: actionResolvers.DeleteInviteResolver,
        updateInvite: actionResolvers.UpdateInviteResolver,
        deleteManyInvite: actionResolvers.DeleteManyInviteResolver,
        updateManyInvite: actionResolvers.UpdateManyInviteResolver,
        upsertInvite: actionResolvers.UpsertInviteResolver,
        aggregateInvite: actionResolvers.AggregateInviteResolver,
        groupByInvite: actionResolvers.GroupByInviteResolver
    },
    Notification: {
        notification: actionResolvers.FindUniqueNotificationResolver,
        findFirstNotification: actionResolvers.FindFirstNotificationResolver,
        notifications: actionResolvers.FindManyNotificationResolver,
        createNotification: actionResolvers.CreateNotificationResolver,
        createManyNotification: actionResolvers.CreateManyNotificationResolver,
        deleteNotification: actionResolvers.DeleteNotificationResolver,
        updateNotification: actionResolvers.UpdateNotificationResolver,
        deleteManyNotification: actionResolvers.DeleteManyNotificationResolver,
        updateManyNotification: actionResolvers.UpdateManyNotificationResolver,
        upsertNotification: actionResolvers.UpsertNotificationResolver,
        aggregateNotification: actionResolvers.AggregateNotificationResolver,
        groupByNotification: actionResolvers.GroupByNotificationResolver
    },
    User: {
        user: actionResolvers.FindUniqueUserResolver,
        findFirstUser: actionResolvers.FindFirstUserResolver,
        users: actionResolvers.FindManyUserResolver,
        createUser: actionResolvers.CreateUserResolver,
        createManyUser: actionResolvers.CreateManyUserResolver,
        deleteUser: actionResolvers.DeleteUserResolver,
        updateUser: actionResolvers.UpdateUserResolver,
        deleteManyUser: actionResolvers.DeleteManyUserResolver,
        updateManyUser: actionResolvers.UpdateManyUserResolver,
        upsertUser: actionResolvers.UpsertUserResolver,
        aggregateUser: actionResolvers.AggregateUserResolver,
        groupByUser: actionResolvers.GroupByUserResolver
    }
};
const resolversInfo = {
    Acter: ["acter", "findFirstActer", "acters", "createActer", "createManyActer", "deleteActer", "updateActer", "deleteManyActer", "updateManyActer", "upsertActer", "aggregateActer", "groupByActer"],
    ActerConnection: ["acterConnection", "findFirstActerConnection", "acterConnections", "createActerConnection", "createManyActerConnection", "deleteActerConnection", "updateActerConnection", "deleteManyActerConnection", "updateManyActerConnection", "upsertActerConnection", "aggregateActerConnection", "groupByActerConnection"],
    ActerInterest: ["acterInterest", "findFirstActerInterest", "acterInterests", "createActerInterest", "createManyActerInterest", "deleteActerInterest", "updateActerInterest", "deleteManyActerInterest", "updateManyActerInterest", "upsertActerInterest", "aggregateActerInterest", "groupByActerInterest"],
    ActerType: ["acterType", "findFirstActerType", "acterTypes", "createActerType", "createManyActerType", "deleteActerType", "updateActerType", "deleteManyActerType", "updateManyActerType", "upsertActerType", "aggregateActerType", "groupByActerType"],
    ActerTypeRule: ["acterTypeRule", "findFirstActerTypeRule", "acterTypeRules", "createActerTypeRule", "createManyActerTypeRule", "deleteActerTypeRule", "updateActerTypeRule", "deleteManyActerTypeRule", "updateManyActerTypeRule", "upsertActerTypeRule", "aggregateActerTypeRule", "groupByActerTypeRule"],
    Activity: ["activity", "findFirstActivity", "activities", "createActivity", "createManyActivity", "deleteActivity", "updateActivity", "deleteManyActivity", "updateManyActivity", "upsertActivity", "aggregateActivity", "groupByActivity"],
    ActivityType: ["activityType", "findFirstActivityType", "activityTypes", "createActivityType", "createManyActivityType", "deleteActivityType", "updateActivityType", "deleteManyActivityType", "updateManyActivityType", "upsertActivityType", "aggregateActivityType", "groupByActivityType"],
    Post: ["post", "findFirstPost", "posts", "createPost", "createManyPost", "deletePost", "updatePost", "deleteManyPost", "updateManyPost", "upsertPost", "aggregatePost", "groupByPost"],
    Link: ["link", "findFirstLink", "links", "createLink", "createManyLink", "deleteLink", "updateLink", "deleteManyLink", "updateManyLink", "upsertLink", "aggregateLink", "groupByLink"],
    Interest: ["interest", "findFirstInterest", "interests", "createInterest", "createManyInterest", "deleteInterest", "updateInterest", "deleteManyInterest", "updateManyInterest", "upsertInterest", "aggregateInterest", "groupByInterest"],
    InterestType: ["interestType", "findFirstInterestType", "interestTypes", "createInterestType", "createManyInterestType", "deleteInterestType", "updateInterestType", "deleteManyInterestType", "updateManyInterestType", "upsertInterestType", "aggregateInterestType", "groupByInterestType"],
    Invite: ["invite", "findFirstInvite", "invites", "createInvite", "createManyInvite", "deleteInvite", "updateInvite", "deleteManyInvite", "updateManyInvite", "upsertInvite", "aggregateInvite", "groupByInvite"],
    Notification: ["notification", "findFirstNotification", "notifications", "createNotification", "createManyNotification", "deleteNotification", "updateNotification", "deleteManyNotification", "updateManyNotification", "upsertNotification", "aggregateNotification", "groupByNotification"],
    User: ["user", "findFirstUser", "users", "createUser", "createManyUser", "deleteUser", "updateUser", "deleteManyUser", "updateManyUser", "upsertUser", "aggregateUser", "groupByUser"]
};
const relationResolversInfo = {
    Acter: ["ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerConnection: ["CreatedByUser", "Follower", "Following"],
    ActerInterest: ["CreatedByUser", "Acter", "Interest"],
    ActerType: ["Acter", "ActerTypeRules", "RulesOnActerType"],
    ActerTypeRule: ["Subject", "Object"],
    Activity: ["ActivityType", "createdByUser", "Acter", "Organiser", "Notification"],
    ActivityType: ["Activity"],
    Post: ["Parent", "Comments", "Acter", "Author", "Notification"],
    Link: ["Acter", "createdByUser"],
    Interest: ["InterestType", "InterestActers"],
    InterestType: ["parent", "children", "Interests"],
    Invite: ["OnActer", "createdByUser"],
    Notification: ["ToActer", "OnActer", "Post", "Activity"],
    User: ["Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"]
};
const modelsInfo = {
    Acter: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerConnection: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerInterest: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerType: ["id", "name"],
    ActerTypeRule: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    Activity: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityType: ["id", "name"],
    Post: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    Link: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    Interest: ["id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestType: ["id", "name", "sortOrder", "parentInterestTypeId"],
    Invite: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    Notification: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    User: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"]
};
const inputsInfo = {
    ActerWhereInput: ["AND", "OR", "NOT", "id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "ActerInterests", "createdByUser", "createdByUserId", "deletedAt", "deletedByUserId", "DeletedByUser", "ActerType", "Parent", "Children", "parentActerId", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerOrderByWithRelationInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "ActerInterests", "createdByUser", "createdByUserId", "deletedAt", "deletedByUserId", "DeletedByUser", "ActerType", "Parent", "Children", "parentActerId", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerWhereUniqueInput: ["id", "slug_unique_for_acter_type"],
    ActerOrderByWithAggregationInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId", "_count", "_avg", "_max", "_min", "_sum"],
    ActerScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerConnectionWhereInput: ["AND", "OR", "NOT", "id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "createdByUserId", "Follower", "followerActerId", "Following", "followingActerId"],
    ActerConnectionOrderByWithRelationInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "createdByUserId", "Follower", "followerActerId", "Following", "followingActerId"],
    ActerConnectionWhereUniqueInput: ["id", "acter_follower_following"],
    ActerConnectionOrderByWithAggregationInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId", "_count", "_max", "_min"],
    ActerConnectionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerInterestWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "CreatedByUser", "createdByUserId", "Acter", "acterId", "Interest", "interestId"],
    ActerInterestOrderByWithRelationInput: ["id", "createdAt", "updatedAt", "CreatedByUser", "createdByUserId", "Acter", "acterId", "Interest", "interestId"],
    ActerInterestWhereUniqueInput: ["id", "acter_interests_unique"],
    ActerInterestOrderByWithAggregationInput: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId", "_count", "_max", "_min"],
    ActerInterestScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerTypeWhereInput: ["AND", "OR", "NOT", "id", "name", "Acter", "ActerTypeRules", "RulesOnActerType"],
    ActerTypeOrderByWithRelationInput: ["id", "name", "Acter", "ActerTypeRules", "RulesOnActerType"],
    ActerTypeWhereUniqueInput: ["id", "name"],
    ActerTypeOrderByWithAggregationInput: ["id", "name", "_count", "_max", "_min"],
    ActerTypeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name"],
    ActerTypeRuleWhereInput: ["AND", "OR", "NOT", "id", "canCreate", "canJoin", "canBecome", "Subject", "subjectActerTypeId", "Object", "objectActerTypeId"],
    ActerTypeRuleOrderByWithRelationInput: ["id", "canCreate", "canJoin", "canBecome", "Subject", "subjectActerTypeId", "Object", "objectActerTypeId"],
    ActerTypeRuleWhereUniqueInput: ["id", "subject_object_acter_type_ids"],
    ActerTypeRuleOrderByWithAggregationInput: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId", "_count", "_max", "_min"],
    ActerTypeRuleScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActivityWhereInput: ["AND", "OR", "NOT", "id", "startAt", "endAt", "isOnline", "isAllDay", "ActivityType", "activityTypeId", "createdByUser", "createdByUserId", "createdAt", "updatedAt", "Acter", "acterId", "Organiser", "organiserId", "Notification"],
    ActivityOrderByWithRelationInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "ActivityType", "activityTypeId", "createdByUser", "createdByUserId", "createdAt", "updatedAt", "Acter", "acterId", "Organiser", "organiserId", "Notification"],
    ActivityWhereUniqueInput: ["id", "acterId"],
    ActivityOrderByWithAggregationInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId", "_count", "_max", "_min"],
    ActivityScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityTypeWhereInput: ["AND", "OR", "NOT", "id", "name", "Activity"],
    ActivityTypeOrderByWithRelationInput: ["id", "name", "Activity"],
    ActivityTypeWhereUniqueInput: ["id", "name"],
    ActivityTypeOrderByWithAggregationInput: ["id", "name", "_count", "_max", "_min"],
    ActivityTypeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name"],
    PostWhereInput: ["AND", "OR", "NOT", "id", "content", "createdAt", "updatedAt", "Parent", "parentId", "Comments", "Acter", "acterId", "Author", "authorId", "Notification"],
    PostOrderByWithRelationInput: ["id", "content", "createdAt", "updatedAt", "Parent", "parentId", "Comments", "Acter", "acterId", "Author", "authorId", "Notification"],
    PostWhereUniqueInput: ["id"],
    PostOrderByWithAggregationInput: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId", "_count", "_max", "_min"],
    PostScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    LinkWhereInput: ["AND", "OR", "NOT", "id", "name", "url", "createdAt", "updatedAt", "Acter", "acterId", "createdByUser", "createdByUserId"],
    LinkOrderByWithRelationInput: ["id", "name", "url", "createdAt", "updatedAt", "Acter", "acterId", "createdByUser", "createdByUserId"],
    LinkWhereUniqueInput: ["id"],
    LinkOrderByWithAggregationInput: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId", "_count", "_max", "_min"],
    LinkScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    InterestWhereInput: ["AND", "OR", "NOT", "id", "name", "description", "sdgNumber", "InterestType", "interestTypeId", "InterestActers"],
    InterestOrderByWithRelationInput: ["id", "name", "description", "sdgNumber", "InterestType", "interestTypeId", "InterestActers"],
    InterestWhereUniqueInput: ["id", "nameUniqueForInterestType"],
    InterestOrderByWithAggregationInput: ["id", "name", "description", "sdgNumber", "interestTypeId", "_count", "_max", "_min"],
    InterestScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestTypeWhereInput: ["AND", "OR", "NOT", "id", "name", "parent", "children", "sortOrder", "parentInterestTypeId", "Interests"],
    InterestTypeOrderByWithRelationInput: ["id", "name", "parent", "children", "sortOrder", "parentInterestTypeId", "Interests"],
    InterestTypeWhereUniqueInput: ["id", "nameUniqueForParentInterestType"],
    InterestTypeOrderByWithAggregationInput: ["id", "name", "sortOrder", "parentInterestTypeId", "_count", "_avg", "_max", "_min", "_sum"],
    InterestTypeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "sortOrder", "parentInterestTypeId"],
    InviteWhereInput: ["AND", "OR", "NOT", "id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "OnActer", "onActerId", "createdByUser", "createdByUserId"],
    InviteOrderByWithRelationInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "OnActer", "onActerId", "createdByUser", "createdByUserId"],
    InviteWhereUniqueInput: ["id", "oneEmailInvitePerActer"],
    InviteOrderByWithAggregationInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId", "_count", "_max", "_min"],
    InviteScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    NotificationWhereInput: ["AND", "OR", "NOT", "id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "toActerId", "OnActer", "onActerId", "Post", "postId", "Activity", "activityId"],
    NotificationOrderByWithRelationInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "toActerId", "OnActer", "onActerId", "Post", "postId", "Activity", "activityId"],
    NotificationWhereUniqueInput: ["id"],
    NotificationOrderByWithAggregationInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId", "_count", "_max", "_min"],
    NotificationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    UserWhereInput: ["AND", "OR", "NOT", "id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "acterId", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserOrderByWithRelationInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "acterId", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserWhereUniqueInput: ["id", "email", "acterId"],
    UserOrderByWithAggregationInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId", "_count", "_max", "_min"],
    UserScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"],
    ActerCreateInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerUpdateInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateManyInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerUpdateManyMutationInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt"],
    ActerConnectionCreateInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "Follower", "Following"],
    ActerConnectionUpdateInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "Follower", "Following"],
    ActerConnectionCreateManyInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerConnectionUpdateManyMutationInput: ["id", "isApproved", "role", "createdAt", "updatedAt"],
    ActerInterestCreateInput: ["id", "createdAt", "updatedAt", "CreatedByUser", "Acter", "Interest"],
    ActerInterestUpdateInput: ["id", "createdAt", "updatedAt", "CreatedByUser", "Acter", "Interest"],
    ActerInterestCreateManyInput: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerInterestUpdateManyMutationInput: ["id", "createdAt", "updatedAt"],
    ActerTypeCreateInput: ["id", "name", "Acter", "ActerTypeRules", "RulesOnActerType"],
    ActerTypeUpdateInput: ["id", "name", "Acter", "ActerTypeRules", "RulesOnActerType"],
    ActerTypeCreateManyInput: ["id", "name"],
    ActerTypeUpdateManyMutationInput: ["id", "name"],
    ActerTypeRuleCreateInput: ["id", "canCreate", "canJoin", "canBecome", "Subject", "Object"],
    ActerTypeRuleUpdateInput: ["id", "canCreate", "canJoin", "canBecome", "Subject", "Object"],
    ActerTypeRuleCreateManyInput: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActerTypeRuleUpdateManyMutationInput: ["id", "canCreate", "canJoin", "canBecome"],
    ActivityCreateInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Acter", "Organiser", "Notification"],
    ActivityUpdateInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Acter", "Organiser", "Notification"],
    ActivityCreateManyInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityUpdateManyMutationInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt"],
    ActivityTypeCreateInput: ["id", "name", "Activity"],
    ActivityTypeUpdateInput: ["id", "name", "Activity"],
    ActivityTypeCreateManyInput: ["id", "name"],
    ActivityTypeUpdateManyMutationInput: ["id", "name"],
    PostCreateInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Acter", "Author", "Notification"],
    PostUpdateInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Acter", "Author", "Notification"],
    PostCreateManyInput: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    PostUpdateManyMutationInput: ["id", "content", "createdAt", "updatedAt"],
    LinkCreateInput: ["id", "name", "url", "createdAt", "updatedAt", "Acter", "createdByUser"],
    LinkUpdateInput: ["id", "name", "url", "createdAt", "updatedAt", "Acter", "createdByUser"],
    LinkCreateManyInput: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    LinkUpdateManyMutationInput: ["id", "name", "url", "createdAt", "updatedAt"],
    InterestCreateInput: ["id", "name", "description", "sdgNumber", "InterestType", "InterestActers"],
    InterestUpdateInput: ["id", "name", "description", "sdgNumber", "InterestType", "InterestActers"],
    InterestCreateManyInput: ["id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestUpdateManyMutationInput: ["id", "name", "description", "sdgNumber"],
    InterestTypeCreateInput: ["id", "name", "sortOrder", "parent", "children", "Interests"],
    InterestTypeUpdateInput: ["id", "name", "sortOrder", "parent", "children", "Interests"],
    InterestTypeCreateManyInput: ["id", "name", "sortOrder", "parentInterestTypeId"],
    InterestTypeUpdateManyMutationInput: ["id", "name", "sortOrder"],
    InviteCreateInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "OnActer", "createdByUser"],
    InviteUpdateInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "OnActer", "createdByUser"],
    InviteCreateManyInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    InviteUpdateManyMutationInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt"],
    NotificationCreateInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "OnActer", "Post", "Activity"],
    NotificationUpdateInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "OnActer", "Post", "Activity"],
    NotificationCreateManyInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    NotificationUpdateManyMutationInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt"],
    UserCreateInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserUpdateInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserCreateManyInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"],
    UserUpdateManyMutationInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId"],
    StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
    StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
    FloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    BoolFilter: ["equals", "not"],
    DateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    EnumActerJoinSettingsFilter: ["equals", "in", "notIn", "not"],
    EnumActerNotificationSettingsFilter: ["equals", "in", "notIn", "not"],
    EnumActerNotificationEmailFrequencyFilter: ["equals", "in", "notIn", "not"],
    EnumActerPrivacySettingsFilter: ["equals", "in", "notIn", "not"],
    ActerInterestListRelationFilter: ["every", "some", "none"],
    UserRelationFilter: ["is", "isNot"],
    DateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    ActerTypeRelationFilter: ["is", "isNot"],
    ActerRelationFilter: ["is", "isNot"],
    ActerListRelationFilter: ["every", "some", "none"],
    ActerConnectionListRelationFilter: ["every", "some", "none"],
    ActivityRelationFilter: ["is", "isNot"],
    ActivityListRelationFilter: ["every", "some", "none"],
    PostListRelationFilter: ["every", "some", "none"],
    LinkListRelationFilter: ["every", "some", "none"],
    NotificationListRelationFilter: ["every", "some", "none"],
    InviteListRelationFilter: ["every", "some", "none"],
    ActerInterestOrderByRelationAggregateInput: ["_count"],
    ActerOrderByRelationAggregateInput: ["_count"],
    ActerConnectionOrderByRelationAggregateInput: ["_count"],
    ActivityOrderByRelationAggregateInput: ["_count"],
    PostOrderByRelationAggregateInput: ["_count"],
    LinkOrderByRelationAggregateInput: ["_count"],
    NotificationOrderByRelationAggregateInput: ["_count"],
    InviteOrderByRelationAggregateInput: ["_count"],
    ActerSlug_unique_for_acter_typeCompoundUniqueInput: ["slug", "acterTypeId"],
    ActerCountOrderByAggregateInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerAvgOrderByAggregateInput: ["locationLat", "locationLng"],
    ActerMaxOrderByAggregateInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerMinOrderByAggregateInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerSumOrderByAggregateInput: ["locationLat", "locationLng"],
    StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
    StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
    FloatNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    BoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    DateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    EnumActerJoinSettingsWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    EnumActerNotificationSettingsWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    EnumActerNotificationEmailFrequencyWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    EnumActerPrivacySettingsWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    DateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    BoolNullableFilter: ["equals", "not"],
    EnumActerConnectionRoleFilter: ["equals", "in", "notIn", "not"],
    ActerConnectionActer_follower_followingCompoundUniqueInput: ["followerActerId", "followingActerId"],
    ActerConnectionCountOrderByAggregateInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerConnectionMaxOrderByAggregateInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerConnectionMinOrderByAggregateInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    BoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    EnumActerConnectionRoleWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    InterestRelationFilter: ["is", "isNot"],
    ActerInterestActer_interests_uniqueCompoundUniqueInput: ["acterId", "interestId"],
    ActerInterestCountOrderByAggregateInput: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerInterestMaxOrderByAggregateInput: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerInterestMinOrderByAggregateInput: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerTypeRuleListRelationFilter: ["every", "some", "none"],
    ActerTypeRuleOrderByRelationAggregateInput: ["_count"],
    ActerTypeCountOrderByAggregateInput: ["id", "name"],
    ActerTypeMaxOrderByAggregateInput: ["id", "name"],
    ActerTypeMinOrderByAggregateInput: ["id", "name"],
    ActerTypeRuleSubject_object_acter_type_idsCompoundUniqueInput: ["subjectActerTypeId", "objectActerTypeId"],
    ActerTypeRuleCountOrderByAggregateInput: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActerTypeRuleMaxOrderByAggregateInput: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActerTypeRuleMinOrderByAggregateInput: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActivityTypeRelationFilter: ["is", "isNot"],
    ActivityCountOrderByAggregateInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityMaxOrderByAggregateInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityMinOrderByAggregateInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityTypeCountOrderByAggregateInput: ["id", "name"],
    ActivityTypeMaxOrderByAggregateInput: ["id", "name"],
    ActivityTypeMinOrderByAggregateInput: ["id", "name"],
    PostRelationFilter: ["is", "isNot"],
    PostCountOrderByAggregateInput: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    PostMaxOrderByAggregateInput: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    PostMinOrderByAggregateInput: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    LinkCountOrderByAggregateInput: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    LinkMaxOrderByAggregateInput: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    LinkMinOrderByAggregateInput: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    InterestTypeRelationFilter: ["is", "isNot"],
    InterestNameUniqueForInterestTypeCompoundUniqueInput: ["interestTypeId", "name"],
    InterestCountOrderByAggregateInput: ["id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestMaxOrderByAggregateInput: ["id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestMinOrderByAggregateInput: ["id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestTypeListRelationFilter: ["every", "some", "none"],
    IntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    InterestListRelationFilter: ["every", "some", "none"],
    InterestTypeOrderByRelationAggregateInput: ["_count"],
    InterestOrderByRelationAggregateInput: ["_count"],
    InterestTypeNameUniqueForParentInterestTypeCompoundUniqueInput: ["parentInterestTypeId", "name"],
    InterestTypeCountOrderByAggregateInput: ["id", "name", "sortOrder", "parentInterestTypeId"],
    InterestTypeAvgOrderByAggregateInput: ["sortOrder"],
    InterestTypeMaxOrderByAggregateInput: ["id", "name", "sortOrder", "parentInterestTypeId"],
    InterestTypeMinOrderByAggregateInput: ["id", "name", "sortOrder", "parentInterestTypeId"],
    InterestTypeSumOrderByAggregateInput: ["sortOrder"],
    IntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    InviteOneEmailInvitePerActerCompoundUniqueInput: ["onActerId", "email"],
    InviteCountOrderByAggregateInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    InviteMaxOrderByAggregateInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    InviteMinOrderByAggregateInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    EnumNotificationTypeFilter: ["equals", "in", "notIn", "not"],
    NotificationCountOrderByAggregateInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    NotificationMaxOrderByAggregateInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    NotificationMinOrderByAggregateInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    EnumNotificationTypeWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    UserCountOrderByAggregateInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"],
    UserMaxOrderByAggregateInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"],
    UserMinOrderByAggregateInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"],
    ActerInterestCreateNestedManyWithoutActerInput: ["create", "connectOrCreate", "createMany", "connect"],
    UserCreateNestedOneWithoutActersCreatedInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutActersDeletedInput: ["create", "connectOrCreate", "connect"],
    ActerTypeCreateNestedOneWithoutActerInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutChildrenInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedManyWithoutParentInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerConnectionCreateNestedManyWithoutFollowerInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerConnectionCreateNestedManyWithoutFollowingInput: ["create", "connectOrCreate", "createMany", "connect"],
    UserCreateNestedOneWithoutActerInput: ["create", "connectOrCreate", "connect"],
    ActivityCreateNestedOneWithoutActerInput: ["create", "connectOrCreate", "connect"],
    ActivityCreateNestedManyWithoutOrganiserInput: ["create", "connectOrCreate", "createMany", "connect"],
    PostCreateNestedManyWithoutActerInput: ["create", "connectOrCreate", "createMany", "connect"],
    PostCreateNestedManyWithoutAuthorInput: ["create", "connectOrCreate", "createMany", "connect"],
    LinkCreateNestedManyWithoutActerInput: ["create", "connectOrCreate", "createMany", "connect"],
    NotificationCreateNestedManyWithoutOnActerInput: ["create", "connectOrCreate", "createMany", "connect"],
    NotificationCreateNestedManyWithoutToActerInput: ["create", "connectOrCreate", "createMany", "connect"],
    InviteCreateNestedManyWithoutOnActerInput: ["create", "connectOrCreate", "createMany", "connect"],
    StringFieldUpdateOperationsInput: ["set"],
    NullableStringFieldUpdateOperationsInput: ["set"],
    NullableFloatFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    BoolFieldUpdateOperationsInput: ["set"],
    DateTimeFieldUpdateOperationsInput: ["set"],
    EnumActerJoinSettingsFieldUpdateOperationsInput: ["set"],
    EnumActerNotificationSettingsFieldUpdateOperationsInput: ["set"],
    EnumActerNotificationEmailFrequencyFieldUpdateOperationsInput: ["set"],
    EnumActerPrivacySettingsFieldUpdateOperationsInput: ["set"],
    NullableDateTimeFieldUpdateOperationsInput: ["set"],
    ActerInterestUpdateManyWithoutActerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    UserUpdateOneRequiredWithoutActersCreatedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserUpdateOneWithoutActersDeletedInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActerTypeUpdateOneRequiredWithoutActerInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerUpdateOneWithoutChildrenInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActerUpdateManyWithoutParentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerConnectionUpdateManyWithoutFollowerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerConnectionUpdateManyWithoutFollowingInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    UserUpdateOneWithoutActerInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActivityUpdateOneWithoutActerInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActivityUpdateManyWithoutOrganiserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    PostUpdateManyWithoutActerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    PostUpdateManyWithoutAuthorInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    LinkUpdateManyWithoutActerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    NotificationUpdateManyWithoutOnActerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    NotificationUpdateManyWithoutToActerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    InviteUpdateManyWithoutOnActerInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    UserCreateNestedOneWithoutActerConnectionsInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutFollowingInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutFollowersInput: ["create", "connectOrCreate", "connect"],
    NullableBoolFieldUpdateOperationsInput: ["set"],
    EnumActerConnectionRoleFieldUpdateOperationsInput: ["set"],
    UserUpdateOneRequiredWithoutActerConnectionsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerUpdateOneRequiredWithoutFollowingInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerUpdateOneRequiredWithoutFollowersInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserCreateNestedOneWithoutActerInterestInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutActerInterestsInput: ["create", "connectOrCreate", "connect"],
    InterestCreateNestedOneWithoutInterestActersInput: ["create", "connectOrCreate", "connect"],
    UserUpdateOneRequiredWithoutActerInterestInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerUpdateOneRequiredWithoutActerInterestsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    InterestUpdateOneRequiredWithoutInterestActersInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerCreateNestedManyWithoutActerTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerTypeRuleCreateNestedManyWithoutSubjectInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerTypeRuleCreateNestedManyWithoutObjectInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerUpdateManyWithoutActerTypeInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerTypeRuleUpdateManyWithoutSubjectInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerTypeRuleUpdateManyWithoutObjectInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerTypeCreateNestedOneWithoutActerTypeRulesInput: ["create", "connectOrCreate", "connect"],
    ActerTypeCreateNestedOneWithoutRulesOnActerTypeInput: ["create", "connectOrCreate", "connect"],
    ActerTypeUpdateOneRequiredWithoutActerTypeRulesInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerTypeUpdateOneRequiredWithoutRulesOnActerTypeInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActivityTypeCreateNestedOneWithoutActivityInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutActivitiesCreatedInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutActivityInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutActivitiesOrganizedInput: ["create", "connectOrCreate", "connect"],
    NotificationCreateNestedManyWithoutActivityInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActivityTypeUpdateOneRequiredWithoutActivityInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserUpdateOneRequiredWithoutActivitiesCreatedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerUpdateOneWithoutActivityInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActerUpdateOneWithoutActivitiesOrganizedInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    NotificationUpdateManyWithoutActivityInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActivityCreateNestedManyWithoutActivityTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActivityUpdateManyWithoutActivityTypeInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    PostCreateNestedOneWithoutCommentsInput: ["create", "connectOrCreate", "connect"],
    PostCreateNestedManyWithoutParentInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerCreateNestedOneWithoutAttachedPostsInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutAuthoredPostsInput: ["create", "connectOrCreate", "connect"],
    NotificationCreateNestedManyWithoutPostInput: ["create", "connectOrCreate", "createMany", "connect"],
    PostUpdateOneWithoutCommentsInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    PostUpdateManyWithoutParentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerUpdateOneRequiredWithoutAttachedPostsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerUpdateOneRequiredWithoutAuthoredPostsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    NotificationUpdateManyWithoutPostInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerCreateNestedOneWithoutAttachedLinksInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutLinksCreatedInput: ["create", "connectOrCreate", "connect"],
    ActerUpdateOneRequiredWithoutAttachedLinksInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserUpdateOneRequiredWithoutLinksCreatedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    InterestTypeCreateNestedOneWithoutInterestsInput: ["create", "connectOrCreate", "connect"],
    ActerInterestCreateNestedManyWithoutInterestInput: ["create", "connectOrCreate", "createMany", "connect"],
    InterestTypeUpdateOneRequiredWithoutInterestsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerInterestUpdateManyWithoutInterestInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    InterestTypeCreateNestedOneWithoutChildrenInput: ["create", "connectOrCreate", "connect"],
    InterestTypeCreateNestedManyWithoutParentInput: ["create", "connectOrCreate", "createMany", "connect"],
    InterestCreateNestedManyWithoutInterestTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
    IntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    InterestTypeUpdateOneWithoutChildrenInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    InterestTypeUpdateManyWithoutParentInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    InterestUpdateManyWithoutInterestTypeInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerCreateNestedOneWithoutInviteInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutInviteInput: ["create", "connectOrCreate", "connect"],
    ActerUpdateOneRequiredWithoutInviteInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserUpdateOneRequiredWithoutInviteInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerCreateNestedOneWithoutNotificationsOnInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedOneWithoutNotificationsToInput: ["create", "connectOrCreate", "connect"],
    PostCreateNestedOneWithoutNotificationInput: ["create", "connectOrCreate", "connect"],
    ActivityCreateNestedOneWithoutNotificationInput: ["create", "connectOrCreate", "connect"],
    EnumNotificationTypeFieldUpdateOperationsInput: ["set"],
    ActerUpdateOneRequiredWithoutNotificationsOnInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ActerUpdateOneRequiredWithoutNotificationsToInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    PostUpdateOneWithoutNotificationInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActivityUpdateOneWithoutNotificationInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActerCreateNestedOneWithoutUserInput: ["create", "connectOrCreate", "connect"],
    ActerCreateNestedManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerConnectionCreateNestedManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    LinkCreateNestedManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerInterestCreateNestedManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActivityCreateNestedManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerCreateNestedManyWithoutDeletedByUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    InviteCreateNestedManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    ActerUpdateOneWithoutUserInput: ["create", "connectOrCreate", "upsert", "connect", "disconnect", "delete", "update"],
    ActerUpdateManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerConnectionUpdateManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    LinkUpdateManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerInterestUpdateManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActivityUpdateManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    ActerUpdateManyWithoutDeletedByUserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    InviteUpdateManyWithoutCreatedByUserInput: ["create", "connectOrCreate", "upsert", "createMany", "connect", "set", "disconnect", "delete", "update", "updateMany", "deleteMany"],
    NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
    NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
    NestedFloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedBoolFilter: ["equals", "not"],
    NestedDateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedEnumActerJoinSettingsFilter: ["equals", "in", "notIn", "not"],
    NestedEnumActerNotificationSettingsFilter: ["equals", "in", "notIn", "not"],
    NestedEnumActerNotificationEmailFrequencyFilter: ["equals", "in", "notIn", "not"],
    NestedEnumActerPrivacySettingsFilter: ["equals", "in", "notIn", "not"],
    NestedDateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
    NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
    NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedFloatNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedBoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    NestedDateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    NestedEnumActerJoinSettingsWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumActerNotificationSettingsWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumActerNotificationEmailFrequencyWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumActerPrivacySettingsWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedDateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    NestedBoolNullableFilter: ["equals", "not"],
    NestedEnumActerConnectionRoleFilter: ["equals", "in", "notIn", "not"],
    NestedBoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    NestedEnumActerConnectionRoleWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedEnumNotificationTypeFilter: ["equals", "in", "notIn", "not"],
    NestedEnumNotificationTypeWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    ActerInterestCreateWithoutActerInput: ["id", "createdAt", "updatedAt", "CreatedByUser", "Interest"],
    ActerInterestCreateOrConnectWithoutActerInput: ["where", "create"],
    ActerInterestCreateManyActerInputEnvelope: ["data", "skipDuplicates"],
    UserCreateWithoutActersCreatedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserCreateOrConnectWithoutActersCreatedInput: ["where", "create"],
    UserCreateWithoutActersDeletedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "Invite"],
    UserCreateOrConnectWithoutActersDeletedInput: ["where", "create"],
    ActerTypeCreateWithoutActerInput: ["id", "name", "ActerTypeRules", "RulesOnActerType"],
    ActerTypeCreateOrConnectWithoutActerInput: ["where", "create"],
    ActerCreateWithoutChildrenInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutChildrenInput: ["where", "create"],
    ActerCreateWithoutParentInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutParentInput: ["where", "create"],
    ActerCreateManyParentInputEnvelope: ["data", "skipDuplicates"],
    ActerConnectionCreateWithoutFollowerInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "Following"],
    ActerConnectionCreateOrConnectWithoutFollowerInput: ["where", "create"],
    ActerConnectionCreateManyFollowerInputEnvelope: ["data", "skipDuplicates"],
    ActerConnectionCreateWithoutFollowingInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "Follower"],
    ActerConnectionCreateOrConnectWithoutFollowingInput: ["where", "create"],
    ActerConnectionCreateManyFollowingInputEnvelope: ["data", "skipDuplicates"],
    UserCreateWithoutActerInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserCreateOrConnectWithoutActerInput: ["where", "create"],
    ActivityCreateWithoutActerInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Organiser", "Notification"],
    ActivityCreateOrConnectWithoutActerInput: ["where", "create"],
    ActivityCreateWithoutOrganiserInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Acter", "Notification"],
    ActivityCreateOrConnectWithoutOrganiserInput: ["where", "create"],
    ActivityCreateManyOrganiserInputEnvelope: ["data", "skipDuplicates"],
    PostCreateWithoutActerInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Author", "Notification"],
    PostCreateOrConnectWithoutActerInput: ["where", "create"],
    PostCreateManyActerInputEnvelope: ["data", "skipDuplicates"],
    PostCreateWithoutAuthorInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Acter", "Notification"],
    PostCreateOrConnectWithoutAuthorInput: ["where", "create"],
    PostCreateManyAuthorInputEnvelope: ["data", "skipDuplicates"],
    LinkCreateWithoutActerInput: ["id", "name", "url", "createdAt", "updatedAt", "createdByUser"],
    LinkCreateOrConnectWithoutActerInput: ["where", "create"],
    LinkCreateManyActerInputEnvelope: ["data", "skipDuplicates"],
    NotificationCreateWithoutOnActerInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "Post", "Activity"],
    NotificationCreateOrConnectWithoutOnActerInput: ["where", "create"],
    NotificationCreateManyOnActerInputEnvelope: ["data", "skipDuplicates"],
    NotificationCreateWithoutToActerInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "OnActer", "Post", "Activity"],
    NotificationCreateOrConnectWithoutToActerInput: ["where", "create"],
    NotificationCreateManyToActerInputEnvelope: ["data", "skipDuplicates"],
    InviteCreateWithoutOnActerInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "createdByUser"],
    InviteCreateOrConnectWithoutOnActerInput: ["where", "create"],
    InviteCreateManyOnActerInputEnvelope: ["data", "skipDuplicates"],
    ActerInterestUpsertWithWhereUniqueWithoutActerInput: ["where", "update", "create"],
    ActerInterestUpdateWithWhereUniqueWithoutActerInput: ["where", "data"],
    ActerInterestUpdateManyWithWhereWithoutActerInput: ["where", "data"],
    ActerInterestScalarWhereInput: ["AND", "OR", "NOT", "id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    UserUpsertWithoutActersCreatedInput: ["update", "create"],
    UserUpdateWithoutActersCreatedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserUpsertWithoutActersDeletedInput: ["update", "create"],
    UserUpdateWithoutActersDeletedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "Invite"],
    ActerTypeUpsertWithoutActerInput: ["update", "create"],
    ActerTypeUpdateWithoutActerInput: ["id", "name", "ActerTypeRules", "RulesOnActerType"],
    ActerUpsertWithoutChildrenInput: ["update", "create"],
    ActerUpdateWithoutChildrenInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerUpsertWithWhereUniqueWithoutParentInput: ["where", "update", "create"],
    ActerUpdateWithWhereUniqueWithoutParentInput: ["where", "data"],
    ActerUpdateManyWithWhereWithoutParentInput: ["where", "data"],
    ActerScalarWhereInput: ["AND", "OR", "NOT", "id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerConnectionUpsertWithWhereUniqueWithoutFollowerInput: ["where", "update", "create"],
    ActerConnectionUpdateWithWhereUniqueWithoutFollowerInput: ["where", "data"],
    ActerConnectionUpdateManyWithWhereWithoutFollowerInput: ["where", "data"],
    ActerConnectionScalarWhereInput: ["AND", "OR", "NOT", "id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerConnectionUpsertWithWhereUniqueWithoutFollowingInput: ["where", "update", "create"],
    ActerConnectionUpdateWithWhereUniqueWithoutFollowingInput: ["where", "data"],
    ActerConnectionUpdateManyWithWhereWithoutFollowingInput: ["where", "data"],
    UserUpsertWithoutActerInput: ["update", "create"],
    UserUpdateWithoutActerInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    ActivityUpsertWithoutActerInput: ["update", "create"],
    ActivityUpdateWithoutActerInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Organiser", "Notification"],
    ActivityUpsertWithWhereUniqueWithoutOrganiserInput: ["where", "update", "create"],
    ActivityUpdateWithWhereUniqueWithoutOrganiserInput: ["where", "data"],
    ActivityUpdateManyWithWhereWithoutOrganiserInput: ["where", "data"],
    ActivityScalarWhereInput: ["AND", "OR", "NOT", "id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    PostUpsertWithWhereUniqueWithoutActerInput: ["where", "update", "create"],
    PostUpdateWithWhereUniqueWithoutActerInput: ["where", "data"],
    PostUpdateManyWithWhereWithoutActerInput: ["where", "data"],
    PostScalarWhereInput: ["AND", "OR", "NOT", "id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    PostUpsertWithWhereUniqueWithoutAuthorInput: ["where", "update", "create"],
    PostUpdateWithWhereUniqueWithoutAuthorInput: ["where", "data"],
    PostUpdateManyWithWhereWithoutAuthorInput: ["where", "data"],
    LinkUpsertWithWhereUniqueWithoutActerInput: ["where", "update", "create"],
    LinkUpdateWithWhereUniqueWithoutActerInput: ["where", "data"],
    LinkUpdateManyWithWhereWithoutActerInput: ["where", "data"],
    LinkScalarWhereInput: ["AND", "OR", "NOT", "id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    NotificationUpsertWithWhereUniqueWithoutOnActerInput: ["where", "update", "create"],
    NotificationUpdateWithWhereUniqueWithoutOnActerInput: ["where", "data"],
    NotificationUpdateManyWithWhereWithoutOnActerInput: ["where", "data"],
    NotificationScalarWhereInput: ["AND", "OR", "NOT", "id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    NotificationUpsertWithWhereUniqueWithoutToActerInput: ["where", "update", "create"],
    NotificationUpdateWithWhereUniqueWithoutToActerInput: ["where", "data"],
    NotificationUpdateManyWithWhereWithoutToActerInput: ["where", "data"],
    InviteUpsertWithWhereUniqueWithoutOnActerInput: ["where", "update", "create"],
    InviteUpdateWithWhereUniqueWithoutOnActerInput: ["where", "data"],
    InviteUpdateManyWithWhereWithoutOnActerInput: ["where", "data"],
    InviteScalarWhereInput: ["AND", "OR", "NOT", "id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    UserCreateWithoutActerConnectionsInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserCreateOrConnectWithoutActerConnectionsInput: ["where", "create"],
    ActerCreateWithoutFollowingInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutFollowingInput: ["where", "create"],
    ActerCreateWithoutFollowersInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutFollowersInput: ["where", "create"],
    UserUpsertWithoutActerConnectionsInput: ["update", "create"],
    UserUpdateWithoutActerConnectionsInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    ActerUpsertWithoutFollowingInput: ["update", "create"],
    ActerUpdateWithoutFollowingInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerUpsertWithoutFollowersInput: ["update", "create"],
    ActerUpdateWithoutFollowersInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    UserCreateWithoutActerInterestInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserCreateOrConnectWithoutActerInterestInput: ["where", "create"],
    ActerCreateWithoutActerInterestsInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutActerInterestsInput: ["where", "create"],
    InterestCreateWithoutInterestActersInput: ["id", "name", "description", "sdgNumber", "InterestType"],
    InterestCreateOrConnectWithoutInterestActersInput: ["where", "create"],
    UserUpsertWithoutActerInterestInput: ["update", "create"],
    UserUpdateWithoutActerInterestInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActivitiesCreated", "ActersDeleted", "Invite"],
    ActerUpsertWithoutActerInterestsInput: ["update", "create"],
    ActerUpdateWithoutActerInterestsInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    InterestUpsertWithoutInterestActersInput: ["update", "create"],
    InterestUpdateWithoutInterestActersInput: ["id", "name", "description", "sdgNumber", "InterestType"],
    ActerCreateWithoutActerTypeInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutActerTypeInput: ["where", "create"],
    ActerCreateManyActerTypeInputEnvelope: ["data", "skipDuplicates"],
    ActerTypeRuleCreateWithoutSubjectInput: ["id", "canCreate", "canJoin", "canBecome", "Object"],
    ActerTypeRuleCreateOrConnectWithoutSubjectInput: ["where", "create"],
    ActerTypeRuleCreateManySubjectInputEnvelope: ["data", "skipDuplicates"],
    ActerTypeRuleCreateWithoutObjectInput: ["id", "canCreate", "canJoin", "canBecome", "Subject"],
    ActerTypeRuleCreateOrConnectWithoutObjectInput: ["where", "create"],
    ActerTypeRuleCreateManyObjectInputEnvelope: ["data", "skipDuplicates"],
    ActerUpsertWithWhereUniqueWithoutActerTypeInput: ["where", "update", "create"],
    ActerUpdateWithWhereUniqueWithoutActerTypeInput: ["where", "data"],
    ActerUpdateManyWithWhereWithoutActerTypeInput: ["where", "data"],
    ActerTypeRuleUpsertWithWhereUniqueWithoutSubjectInput: ["where", "update", "create"],
    ActerTypeRuleUpdateWithWhereUniqueWithoutSubjectInput: ["where", "data"],
    ActerTypeRuleUpdateManyWithWhereWithoutSubjectInput: ["where", "data"],
    ActerTypeRuleScalarWhereInput: ["AND", "OR", "NOT", "id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActerTypeRuleUpsertWithWhereUniqueWithoutObjectInput: ["where", "update", "create"],
    ActerTypeRuleUpdateWithWhereUniqueWithoutObjectInput: ["where", "data"],
    ActerTypeRuleUpdateManyWithWhereWithoutObjectInput: ["where", "data"],
    ActerTypeCreateWithoutActerTypeRulesInput: ["id", "name", "Acter", "RulesOnActerType"],
    ActerTypeCreateOrConnectWithoutActerTypeRulesInput: ["where", "create"],
    ActerTypeCreateWithoutRulesOnActerTypeInput: ["id", "name", "Acter", "ActerTypeRules"],
    ActerTypeCreateOrConnectWithoutRulesOnActerTypeInput: ["where", "create"],
    ActerTypeUpsertWithoutActerTypeRulesInput: ["update", "create"],
    ActerTypeUpdateWithoutActerTypeRulesInput: ["id", "name", "Acter", "RulesOnActerType"],
    ActerTypeUpsertWithoutRulesOnActerTypeInput: ["update", "create"],
    ActerTypeUpdateWithoutRulesOnActerTypeInput: ["id", "name", "Acter", "ActerTypeRules"],
    ActivityTypeCreateWithoutActivityInput: ["id", "name"],
    ActivityTypeCreateOrConnectWithoutActivityInput: ["where", "create"],
    UserCreateWithoutActivitiesCreatedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActersDeleted", "Invite"],
    UserCreateOrConnectWithoutActivitiesCreatedInput: ["where", "create"],
    ActerCreateWithoutActivityInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutActivityInput: ["where", "create"],
    ActerCreateWithoutActivitiesOrganizedInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutActivitiesOrganizedInput: ["where", "create"],
    NotificationCreateWithoutActivityInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "OnActer", "Post"],
    NotificationCreateOrConnectWithoutActivityInput: ["where", "create"],
    NotificationCreateManyActivityInputEnvelope: ["data", "skipDuplicates"],
    ActivityTypeUpsertWithoutActivityInput: ["update", "create"],
    ActivityTypeUpdateWithoutActivityInput: ["id", "name"],
    UserUpsertWithoutActivitiesCreatedInput: ["update", "create"],
    UserUpdateWithoutActivitiesCreatedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActersDeleted", "Invite"],
    ActerUpsertWithoutActivityInput: ["update", "create"],
    ActerUpdateWithoutActivityInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerUpsertWithoutActivitiesOrganizedInput: ["update", "create"],
    ActerUpdateWithoutActivitiesOrganizedInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    NotificationUpsertWithWhereUniqueWithoutActivityInput: ["where", "update", "create"],
    NotificationUpdateWithWhereUniqueWithoutActivityInput: ["where", "data"],
    NotificationUpdateManyWithWhereWithoutActivityInput: ["where", "data"],
    ActivityCreateWithoutActivityTypeInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "createdByUser", "Acter", "Organiser", "Notification"],
    ActivityCreateOrConnectWithoutActivityTypeInput: ["where", "create"],
    ActivityCreateManyActivityTypeInputEnvelope: ["data", "skipDuplicates"],
    ActivityUpsertWithWhereUniqueWithoutActivityTypeInput: ["where", "update", "create"],
    ActivityUpdateWithWhereUniqueWithoutActivityTypeInput: ["where", "data"],
    ActivityUpdateManyWithWhereWithoutActivityTypeInput: ["where", "data"],
    PostCreateWithoutCommentsInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Acter", "Author", "Notification"],
    PostCreateOrConnectWithoutCommentsInput: ["where", "create"],
    PostCreateWithoutParentInput: ["id", "content", "createdAt", "updatedAt", "Comments", "Acter", "Author", "Notification"],
    PostCreateOrConnectWithoutParentInput: ["where", "create"],
    PostCreateManyParentInputEnvelope: ["data", "skipDuplicates"],
    ActerCreateWithoutAttachedPostsInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutAttachedPostsInput: ["where", "create"],
    ActerCreateWithoutAuthoredPostsInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutAuthoredPostsInput: ["where", "create"],
    NotificationCreateWithoutPostInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "OnActer", "Activity"],
    NotificationCreateOrConnectWithoutPostInput: ["where", "create"],
    NotificationCreateManyPostInputEnvelope: ["data", "skipDuplicates"],
    PostUpsertWithoutCommentsInput: ["update", "create"],
    PostUpdateWithoutCommentsInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Acter", "Author", "Notification"],
    PostUpsertWithWhereUniqueWithoutParentInput: ["where", "update", "create"],
    PostUpdateWithWhereUniqueWithoutParentInput: ["where", "data"],
    PostUpdateManyWithWhereWithoutParentInput: ["where", "data"],
    ActerUpsertWithoutAttachedPostsInput: ["update", "create"],
    ActerUpdateWithoutAttachedPostsInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerUpsertWithoutAuthoredPostsInput: ["update", "create"],
    ActerUpdateWithoutAuthoredPostsInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    NotificationUpsertWithWhereUniqueWithoutPostInput: ["where", "update", "create"],
    NotificationUpdateWithWhereUniqueWithoutPostInput: ["where", "data"],
    NotificationUpdateManyWithWhereWithoutPostInput: ["where", "data"],
    ActerCreateWithoutAttachedLinksInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutAttachedLinksInput: ["where", "create"],
    UserCreateWithoutLinksCreatedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserCreateOrConnectWithoutLinksCreatedInput: ["where", "create"],
    ActerUpsertWithoutAttachedLinksInput: ["update", "create"],
    ActerUpdateWithoutAttachedLinksInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "NotificationsTo", "NotificationsOn", "Invite"],
    UserUpsertWithoutLinksCreatedInput: ["update", "create"],
    UserUpdateWithoutLinksCreatedInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    InterestTypeCreateWithoutInterestsInput: ["id", "name", "sortOrder", "parent", "children"],
    InterestTypeCreateOrConnectWithoutInterestsInput: ["where", "create"],
    ActerInterestCreateWithoutInterestInput: ["id", "createdAt", "updatedAt", "CreatedByUser", "Acter"],
    ActerInterestCreateOrConnectWithoutInterestInput: ["where", "create"],
    ActerInterestCreateManyInterestInputEnvelope: ["data", "skipDuplicates"],
    InterestTypeUpsertWithoutInterestsInput: ["update", "create"],
    InterestTypeUpdateWithoutInterestsInput: ["id", "name", "sortOrder", "parent", "children"],
    ActerInterestUpsertWithWhereUniqueWithoutInterestInput: ["where", "update", "create"],
    ActerInterestUpdateWithWhereUniqueWithoutInterestInput: ["where", "data"],
    ActerInterestUpdateManyWithWhereWithoutInterestInput: ["where", "data"],
    InterestTypeCreateWithoutChildrenInput: ["id", "name", "sortOrder", "parent", "Interests"],
    InterestTypeCreateOrConnectWithoutChildrenInput: ["where", "create"],
    InterestTypeCreateWithoutParentInput: ["id", "name", "sortOrder", "children", "Interests"],
    InterestTypeCreateOrConnectWithoutParentInput: ["where", "create"],
    InterestTypeCreateManyParentInputEnvelope: ["data", "skipDuplicates"],
    InterestCreateWithoutInterestTypeInput: ["id", "name", "description", "sdgNumber", "InterestActers"],
    InterestCreateOrConnectWithoutInterestTypeInput: ["where", "create"],
    InterestCreateManyInterestTypeInputEnvelope: ["data", "skipDuplicates"],
    InterestTypeUpsertWithoutChildrenInput: ["update", "create"],
    InterestTypeUpdateWithoutChildrenInput: ["id", "name", "sortOrder", "parent", "Interests"],
    InterestTypeUpsertWithWhereUniqueWithoutParentInput: ["where", "update", "create"],
    InterestTypeUpdateWithWhereUniqueWithoutParentInput: ["where", "data"],
    InterestTypeUpdateManyWithWhereWithoutParentInput: ["where", "data"],
    InterestTypeScalarWhereInput: ["AND", "OR", "NOT", "id", "name", "sortOrder", "parentInterestTypeId"],
    InterestUpsertWithWhereUniqueWithoutInterestTypeInput: ["where", "update", "create"],
    InterestUpdateWithWhereUniqueWithoutInterestTypeInput: ["where", "data"],
    InterestUpdateManyWithWhereWithoutInterestTypeInput: ["where", "data"],
    InterestScalarWhereInput: ["AND", "OR", "NOT", "id", "name", "description", "sdgNumber", "interestTypeId"],
    ActerCreateWithoutInviteInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn"],
    ActerCreateOrConnectWithoutInviteInput: ["where", "create"],
    UserCreateWithoutInviteInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted"],
    UserCreateOrConnectWithoutInviteInput: ["where", "create"],
    ActerUpsertWithoutInviteInput: ["update", "create"],
    ActerUpdateWithoutInviteInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn"],
    UserUpsertWithoutInviteInput: ["update", "create"],
    UserUpdateWithoutInviteInput: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "Acter", "ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted"],
    ActerCreateWithoutNotificationsOnInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "Invite"],
    ActerCreateOrConnectWithoutNotificationsOnInput: ["where", "create"],
    ActerCreateWithoutNotificationsToInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutNotificationsToInput: ["where", "create"],
    PostCreateWithoutNotificationInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Acter", "Author"],
    PostCreateOrConnectWithoutNotificationInput: ["where", "create"],
    ActivityCreateWithoutNotificationInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Acter", "Organiser"],
    ActivityCreateOrConnectWithoutNotificationInput: ["where", "create"],
    ActerUpsertWithoutNotificationsOnInput: ["update", "create"],
    ActerUpdateWithoutNotificationsOnInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "Invite"],
    ActerUpsertWithoutNotificationsToInput: ["update", "create"],
    ActerUpdateWithoutNotificationsToInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsOn", "Invite"],
    PostUpsertWithoutNotificationInput: ["update", "create"],
    PostUpdateWithoutNotificationInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Acter", "Author"],
    ActivityUpsertWithoutNotificationInput: ["update", "create"],
    ActivityUpdateWithoutNotificationInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Acter", "Organiser"],
    ActerCreateWithoutUserInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutUserInput: ["where", "create"],
    ActerCreateWithoutCreatedByUserInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutCreatedByUserInput: ["where", "create"],
    ActerCreateManyCreatedByUserInputEnvelope: ["data", "skipDuplicates"],
    ActerConnectionCreateWithoutCreatedByUserInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "Follower", "Following"],
    ActerConnectionCreateOrConnectWithoutCreatedByUserInput: ["where", "create"],
    ActerConnectionCreateManyCreatedByUserInputEnvelope: ["data", "skipDuplicates"],
    LinkCreateWithoutCreatedByUserInput: ["id", "name", "url", "createdAt", "updatedAt", "Acter"],
    LinkCreateOrConnectWithoutCreatedByUserInput: ["where", "create"],
    LinkCreateManyCreatedByUserInputEnvelope: ["data", "skipDuplicates"],
    ActerInterestCreateWithoutCreatedByUserInput: ["id", "createdAt", "updatedAt", "Acter", "Interest"],
    ActerInterestCreateOrConnectWithoutCreatedByUserInput: ["where", "create"],
    ActerInterestCreateManyCreatedByUserInputEnvelope: ["data", "skipDuplicates"],
    ActivityCreateWithoutCreatedByUserInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "Acter", "Organiser", "Notification"],
    ActivityCreateOrConnectWithoutCreatedByUserInput: ["where", "create"],
    ActivityCreateManyCreatedByUserInputEnvelope: ["data", "skipDuplicates"],
    ActerCreateWithoutDeletedByUserInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCreateOrConnectWithoutDeletedByUserInput: ["where", "create"],
    ActerCreateManyDeletedByUserInputEnvelope: ["data", "skipDuplicates"],
    InviteCreateWithoutCreatedByUserInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "OnActer"],
    InviteCreateOrConnectWithoutCreatedByUserInput: ["where", "create"],
    InviteCreateManyCreatedByUserInputEnvelope: ["data", "skipDuplicates"],
    ActerUpsertWithoutUserInput: ["update", "create"],
    ActerUpdateWithoutUserInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerUpsertWithWhereUniqueWithoutCreatedByUserInput: ["where", "update", "create"],
    ActerUpdateWithWhereUniqueWithoutCreatedByUserInput: ["where", "data"],
    ActerUpdateManyWithWhereWithoutCreatedByUserInput: ["where", "data"],
    ActerConnectionUpsertWithWhereUniqueWithoutCreatedByUserInput: ["where", "update", "create"],
    ActerConnectionUpdateWithWhereUniqueWithoutCreatedByUserInput: ["where", "data"],
    ActerConnectionUpdateManyWithWhereWithoutCreatedByUserInput: ["where", "data"],
    LinkUpsertWithWhereUniqueWithoutCreatedByUserInput: ["where", "update", "create"],
    LinkUpdateWithWhereUniqueWithoutCreatedByUserInput: ["where", "data"],
    LinkUpdateManyWithWhereWithoutCreatedByUserInput: ["where", "data"],
    ActerInterestUpsertWithWhereUniqueWithoutCreatedByUserInput: ["where", "update", "create"],
    ActerInterestUpdateWithWhereUniqueWithoutCreatedByUserInput: ["where", "data"],
    ActerInterestUpdateManyWithWhereWithoutCreatedByUserInput: ["where", "data"],
    ActivityUpsertWithWhereUniqueWithoutCreatedByUserInput: ["where", "update", "create"],
    ActivityUpdateWithWhereUniqueWithoutCreatedByUserInput: ["where", "data"],
    ActivityUpdateManyWithWhereWithoutCreatedByUserInput: ["where", "data"],
    ActerUpsertWithWhereUniqueWithoutDeletedByUserInput: ["where", "update", "create"],
    ActerUpdateWithWhereUniqueWithoutDeletedByUserInput: ["where", "data"],
    ActerUpdateManyWithWhereWithoutDeletedByUserInput: ["where", "data"],
    InviteUpsertWithWhereUniqueWithoutCreatedByUserInput: ["where", "update", "create"],
    InviteUpdateWithWhereUniqueWithoutCreatedByUserInput: ["where", "data"],
    InviteUpdateManyWithWhereWithoutCreatedByUserInput: ["where", "data"],
    ActerInterestCreateManyActerInput: ["id", "createdAt", "updatedAt", "createdByUserId", "interestId"],
    ActerCreateManyParentInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId"],
    ActerConnectionCreateManyFollowerInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followingActerId"],
    ActerConnectionCreateManyFollowingInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId"],
    ActivityCreateManyOrganiserInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId"],
    PostCreateManyActerInput: ["id", "content", "createdAt", "updatedAt", "parentId", "authorId"],
    PostCreateManyAuthorInput: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId"],
    LinkCreateManyActerInput: ["id", "name", "url", "createdAt", "updatedAt", "createdByUserId"],
    NotificationCreateManyOnActerInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "postId", "activityId"],
    NotificationCreateManyToActerInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "onActerId", "postId", "activityId"],
    InviteCreateManyOnActerInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "createdByUserId"],
    ActerInterestUpdateWithoutActerInput: ["id", "createdAt", "updatedAt", "CreatedByUser", "Interest"],
    ActerUpdateWithoutParentInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "ActerType", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerConnectionUpdateWithoutFollowerInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "Following"],
    ActerConnectionUpdateWithoutFollowingInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "CreatedByUser", "Follower"],
    ActivityUpdateWithoutOrganiserInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "createdByUser", "Acter", "Notification"],
    PostUpdateWithoutActerInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Author", "Notification"],
    PostUpdateWithoutAuthorInput: ["id", "content", "createdAt", "updatedAt", "Parent", "Comments", "Acter", "Notification"],
    LinkUpdateWithoutActerInput: ["id", "name", "url", "createdAt", "updatedAt", "createdByUser"],
    NotificationUpdateWithoutOnActerInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "Post", "Activity"],
    NotificationUpdateWithoutToActerInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "OnActer", "Post", "Activity"],
    InviteUpdateWithoutOnActerInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "createdByUser"],
    ActerCreateManyActerTypeInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerTypeRuleCreateManySubjectInput: ["id", "canCreate", "canJoin", "canBecome", "objectActerTypeId"],
    ActerTypeRuleCreateManyObjectInput: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId"],
    ActerUpdateWithoutActerTypeInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "DeletedByUser", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerTypeRuleUpdateWithoutSubjectInput: ["id", "canCreate", "canJoin", "canBecome", "Object"],
    ActerTypeRuleUpdateWithoutObjectInput: ["id", "canCreate", "canJoin", "canBecome", "Subject"],
    NotificationCreateManyActivityInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId"],
    NotificationUpdateWithoutActivityInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "OnActer", "Post"],
    ActivityCreateManyActivityTypeInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityUpdateWithoutActivityTypeInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "createdByUser", "Acter", "Organiser", "Notification"],
    PostCreateManyParentInput: ["id", "content", "createdAt", "updatedAt", "acterId", "authorId"],
    NotificationCreateManyPostInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "activityId"],
    PostUpdateWithoutParentInput: ["id", "content", "createdAt", "updatedAt", "Comments", "Acter", "Author", "Notification"],
    NotificationUpdateWithoutPostInput: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "ToActer", "OnActer", "Activity"],
    ActerInterestCreateManyInterestInput: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId"],
    ActerInterestUpdateWithoutInterestInput: ["id", "createdAt", "updatedAt", "CreatedByUser", "Acter"],
    InterestTypeCreateManyParentInput: ["id", "name", "sortOrder"],
    InterestCreateManyInterestTypeInput: ["id", "name", "description", "sdgNumber"],
    InterestTypeUpdateWithoutParentInput: ["id", "name", "sortOrder", "children", "Interests"],
    InterestUpdateWithoutInterestTypeInput: ["id", "name", "description", "sdgNumber", "InterestActers"],
    ActerCreateManyCreatedByUserInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerConnectionCreateManyCreatedByUserInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "followerActerId", "followingActerId"],
    LinkCreateManyCreatedByUserInput: ["id", "name", "url", "createdAt", "updatedAt", "acterId"],
    ActerInterestCreateManyCreatedByUserInput: ["id", "createdAt", "updatedAt", "acterId", "interestId"],
    ActivityCreateManyCreatedByUserInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActerCreateManyDeletedByUserInput: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "parentActerId"],
    InviteCreateManyCreatedByUserInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId"],
    ActerUpdateWithoutCreatedByUserInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "DeletedByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerConnectionUpdateWithoutCreatedByUserInput: ["id", "isApproved", "role", "createdAt", "updatedAt", "Follower", "Following"],
    LinkUpdateWithoutCreatedByUserInput: ["id", "name", "url", "createdAt", "updatedAt", "Acter"],
    ActerInterestUpdateWithoutCreatedByUserInput: ["id", "createdAt", "updatedAt", "Acter", "Interest"],
    ActivityUpdateWithoutCreatedByUserInput: ["id", "startAt", "endAt", "isOnline", "isAllDay", "createdAt", "updatedAt", "ActivityType", "Acter", "Organiser", "Notification"],
    ActerUpdateWithoutDeletedByUserInput: ["id", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "deletedAt", "ActerInterests", "createdByUser", "ActerType", "Parent", "Children", "Following", "Followers", "User", "Activity", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    InviteUpdateWithoutCreatedByUserInput: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "OnActer"]
};
const outputsInfo = {
    AggregateActer: ["_count", "_avg", "_sum", "_min", "_max"],
    ActerGroupBy: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateActerConnection: ["_count", "_min", "_max"],
    ActerConnectionGroupBy: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId", "_count", "_min", "_max"],
    AggregateActerInterest: ["_count", "_min", "_max"],
    ActerInterestGroupBy: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId", "_count", "_min", "_max"],
    AggregateActerType: ["_count", "_min", "_max"],
    ActerTypeGroupBy: ["id", "name", "_count", "_min", "_max"],
    AggregateActerTypeRule: ["_count", "_min", "_max"],
    ActerTypeRuleGroupBy: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId", "_count", "_min", "_max"],
    AggregateActivity: ["_count", "_min", "_max"],
    ActivityGroupBy: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId", "_count", "_min", "_max"],
    AggregateActivityType: ["_count", "_min", "_max"],
    ActivityTypeGroupBy: ["id", "name", "_count", "_min", "_max"],
    AggregatePost: ["_count", "_min", "_max"],
    PostGroupBy: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId", "_count", "_min", "_max"],
    AggregateLink: ["_count", "_min", "_max"],
    LinkGroupBy: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId", "_count", "_min", "_max"],
    AggregateInterest: ["_count", "_min", "_max"],
    InterestGroupBy: ["id", "name", "description", "sdgNumber", "interestTypeId", "_count", "_min", "_max"],
    AggregateInterestType: ["_count", "_avg", "_sum", "_min", "_max"],
    InterestTypeGroupBy: ["id", "name", "sortOrder", "parentInterestTypeId", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateInvite: ["_count", "_min", "_max"],
    InviteGroupBy: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId", "_count", "_min", "_max"],
    AggregateNotification: ["_count", "_min", "_max"],
    NotificationGroupBy: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId", "_count", "_min", "_max"],
    AggregateUser: ["_count", "_min", "_max"],
    UserGroupBy: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId", "_count", "_min", "_max"],
    AffectedRowsOutput: ["count"],
    ActerCount: ["ActerInterests", "Children", "Following", "Followers", "ActivitiesOrganized", "AttachedPosts", "AuthoredPosts", "AttachedLinks", "NotificationsTo", "NotificationsOn", "Invite"],
    ActerCountAggregate: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId", "_all"],
    ActerAvgAggregate: ["locationLat", "locationLng"],
    ActerSumAggregate: ["locationLat", "locationLng"],
    ActerMinAggregate: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerMaxAggregate: ["id", "acterTypeId", "name", "slug", "description", "location", "locationLat", "locationLng", "url", "avatarUrl", "bannerUrl", "useAdmins", "createdAt", "updatedAt", "acterJoinSetting", "acterNotifySetting", "acterNotifyEmailFrequency", "acterPrivacySetting", "createdByUserId", "deletedAt", "deletedByUserId", "parentActerId"],
    ActerConnectionCountAggregate: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId", "_all"],
    ActerConnectionMinAggregate: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerConnectionMaxAggregate: ["id", "isApproved", "role", "createdAt", "updatedAt", "createdByUserId", "followerActerId", "followingActerId"],
    ActerInterestCountAggregate: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId", "_all"],
    ActerInterestMinAggregate: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerInterestMaxAggregate: ["id", "createdAt", "updatedAt", "createdByUserId", "acterId", "interestId"],
    ActerTypeCount: ["Acter", "ActerTypeRules", "RulesOnActerType"],
    ActerTypeCountAggregate: ["id", "name", "_all"],
    ActerTypeMinAggregate: ["id", "name"],
    ActerTypeMaxAggregate: ["id", "name"],
    ActerTypeRuleCountAggregate: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId", "_all"],
    ActerTypeRuleMinAggregate: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActerTypeRuleMaxAggregate: ["id", "canCreate", "canJoin", "canBecome", "subjectActerTypeId", "objectActerTypeId"],
    ActivityCount: ["Notification"],
    ActivityCountAggregate: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId", "_all"],
    ActivityMinAggregate: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityMaxAggregate: ["id", "startAt", "endAt", "isOnline", "isAllDay", "activityTypeId", "createdByUserId", "createdAt", "updatedAt", "acterId", "organiserId"],
    ActivityTypeCount: ["Activity"],
    ActivityTypeCountAggregate: ["id", "name", "_all"],
    ActivityTypeMinAggregate: ["id", "name"],
    ActivityTypeMaxAggregate: ["id", "name"],
    PostCount: ["Comments", "Notification"],
    PostCountAggregate: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId", "_all"],
    PostMinAggregate: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    PostMaxAggregate: ["id", "content", "createdAt", "updatedAt", "parentId", "acterId", "authorId"],
    LinkCountAggregate: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId", "_all"],
    LinkMinAggregate: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    LinkMaxAggregate: ["id", "name", "url", "createdAt", "updatedAt", "acterId", "createdByUserId"],
    InterestCount: ["InterestActers"],
    InterestCountAggregate: ["id", "name", "description", "sdgNumber", "interestTypeId", "_all"],
    InterestMinAggregate: ["id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestMaxAggregate: ["id", "name", "description", "sdgNumber", "interestTypeId"],
    InterestTypeCount: ["children", "Interests"],
    InterestTypeCountAggregate: ["id", "name", "sortOrder", "parentInterestTypeId", "_all"],
    InterestTypeAvgAggregate: ["sortOrder"],
    InterestTypeSumAggregate: ["sortOrder"],
    InterestTypeMinAggregate: ["id", "name", "sortOrder", "parentInterestTypeId"],
    InterestTypeMaxAggregate: ["id", "name", "sortOrder", "parentInterestTypeId"],
    InviteCountAggregate: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId", "_all"],
    InviteMinAggregate: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    InviteMaxAggregate: ["id", "email", "message", "error", "createdAt", "updatedAt", "sentAt", "acceptedAt", "onActerId", "createdByUserId"],
    NotificationCountAggregate: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId", "_all"],
    NotificationMinAggregate: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    NotificationMaxAggregate: ["id", "type", "url", "createdAt", "updatedAt", "sendTo", "sentAt", "viewedAt", "toActerId", "onActerId", "postId", "activityId"],
    UserCount: ["ActersCreated", "ActerConnections", "LinksCreated", "ActerInterest", "ActivitiesCreated", "ActersDeleted", "Invite"],
    UserCountAggregate: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId", "_all"],
    UserMinAggregate: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"],
    UserMaxAggregate: ["id", "name", "email", "emailVerified", "image", "createdAt", "updatedAt", "auth0ProviderId", "intercomId", "acterId"]
};
const argsInfo = {
    FindUniqueActerArgs: ["where"],
    FindFirstActerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyActerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateActerArgs: ["data"],
    CreateManyActerArgs: ["data", "skipDuplicates"],
    DeleteActerArgs: ["where"],
    UpdateActerArgs: ["data", "where"],
    DeleteManyActerArgs: ["where"],
    UpdateManyActerArgs: ["data", "where"],
    UpsertActerArgs: ["where", "create", "update"],
    AggregateActerArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByActerArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueActerConnectionArgs: ["where"],
    FindFirstActerConnectionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyActerConnectionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateActerConnectionArgs: ["data"],
    CreateManyActerConnectionArgs: ["data", "skipDuplicates"],
    DeleteActerConnectionArgs: ["where"],
    UpdateActerConnectionArgs: ["data", "where"],
    DeleteManyActerConnectionArgs: ["where"],
    UpdateManyActerConnectionArgs: ["data", "where"],
    UpsertActerConnectionArgs: ["where", "create", "update"],
    AggregateActerConnectionArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByActerConnectionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueActerInterestArgs: ["where"],
    FindFirstActerInterestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyActerInterestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateActerInterestArgs: ["data"],
    CreateManyActerInterestArgs: ["data", "skipDuplicates"],
    DeleteActerInterestArgs: ["where"],
    UpdateActerInterestArgs: ["data", "where"],
    DeleteManyActerInterestArgs: ["where"],
    UpdateManyActerInterestArgs: ["data", "where"],
    UpsertActerInterestArgs: ["where", "create", "update"],
    AggregateActerInterestArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByActerInterestArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueActerTypeArgs: ["where"],
    FindFirstActerTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyActerTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateActerTypeArgs: ["data"],
    CreateManyActerTypeArgs: ["data", "skipDuplicates"],
    DeleteActerTypeArgs: ["where"],
    UpdateActerTypeArgs: ["data", "where"],
    DeleteManyActerTypeArgs: ["where"],
    UpdateManyActerTypeArgs: ["data", "where"],
    UpsertActerTypeArgs: ["where", "create", "update"],
    AggregateActerTypeArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByActerTypeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueActerTypeRuleArgs: ["where"],
    FindFirstActerTypeRuleArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyActerTypeRuleArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateActerTypeRuleArgs: ["data"],
    CreateManyActerTypeRuleArgs: ["data", "skipDuplicates"],
    DeleteActerTypeRuleArgs: ["where"],
    UpdateActerTypeRuleArgs: ["data", "where"],
    DeleteManyActerTypeRuleArgs: ["where"],
    UpdateManyActerTypeRuleArgs: ["data", "where"],
    UpsertActerTypeRuleArgs: ["where", "create", "update"],
    AggregateActerTypeRuleArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByActerTypeRuleArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueActivityArgs: ["where"],
    FindFirstActivityArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyActivityArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateActivityArgs: ["data"],
    CreateManyActivityArgs: ["data", "skipDuplicates"],
    DeleteActivityArgs: ["where"],
    UpdateActivityArgs: ["data", "where"],
    DeleteManyActivityArgs: ["where"],
    UpdateManyActivityArgs: ["data", "where"],
    UpsertActivityArgs: ["where", "create", "update"],
    AggregateActivityArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByActivityArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueActivityTypeArgs: ["where"],
    FindFirstActivityTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyActivityTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateActivityTypeArgs: ["data"],
    CreateManyActivityTypeArgs: ["data", "skipDuplicates"],
    DeleteActivityTypeArgs: ["where"],
    UpdateActivityTypeArgs: ["data", "where"],
    DeleteManyActivityTypeArgs: ["where"],
    UpdateManyActivityTypeArgs: ["data", "where"],
    UpsertActivityTypeArgs: ["where", "create", "update"],
    AggregateActivityTypeArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByActivityTypeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniquePostArgs: ["where"],
    FindFirstPostArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPostArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreatePostArgs: ["data"],
    CreateManyPostArgs: ["data", "skipDuplicates"],
    DeletePostArgs: ["where"],
    UpdatePostArgs: ["data", "where"],
    DeleteManyPostArgs: ["where"],
    UpdateManyPostArgs: ["data", "where"],
    UpsertPostArgs: ["where", "create", "update"],
    AggregatePostArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByPostArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueLinkArgs: ["where"],
    FindFirstLinkArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyLinkArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateLinkArgs: ["data"],
    CreateManyLinkArgs: ["data", "skipDuplicates"],
    DeleteLinkArgs: ["where"],
    UpdateLinkArgs: ["data", "where"],
    DeleteManyLinkArgs: ["where"],
    UpdateManyLinkArgs: ["data", "where"],
    UpsertLinkArgs: ["where", "create", "update"],
    AggregateLinkArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByLinkArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueInterestArgs: ["where"],
    FindFirstInterestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyInterestArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateInterestArgs: ["data"],
    CreateManyInterestArgs: ["data", "skipDuplicates"],
    DeleteInterestArgs: ["where"],
    UpdateInterestArgs: ["data", "where"],
    DeleteManyInterestArgs: ["where"],
    UpdateManyInterestArgs: ["data", "where"],
    UpsertInterestArgs: ["where", "create", "update"],
    AggregateInterestArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByInterestArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueInterestTypeArgs: ["where"],
    FindFirstInterestTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyInterestTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateInterestTypeArgs: ["data"],
    CreateManyInterestTypeArgs: ["data", "skipDuplicates"],
    DeleteInterestTypeArgs: ["where"],
    UpdateInterestTypeArgs: ["data", "where"],
    DeleteManyInterestTypeArgs: ["where"],
    UpdateManyInterestTypeArgs: ["data", "where"],
    UpsertInterestTypeArgs: ["where", "create", "update"],
    AggregateInterestTypeArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByInterestTypeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueInviteArgs: ["where"],
    FindFirstInviteArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyInviteArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateInviteArgs: ["data"],
    CreateManyInviteArgs: ["data", "skipDuplicates"],
    DeleteInviteArgs: ["where"],
    UpdateInviteArgs: ["data", "where"],
    DeleteManyInviteArgs: ["where"],
    UpdateManyInviteArgs: ["data", "where"],
    UpsertInviteArgs: ["where", "create", "update"],
    AggregateInviteArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByInviteArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueNotificationArgs: ["where"],
    FindFirstNotificationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyNotificationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateNotificationArgs: ["data"],
    CreateManyNotificationArgs: ["data", "skipDuplicates"],
    DeleteNotificationArgs: ["where"],
    UpdateNotificationArgs: ["data", "where"],
    DeleteManyNotificationArgs: ["where"],
    UpdateManyNotificationArgs: ["data", "where"],
    UpsertNotificationArgs: ["where", "create", "update"],
    AggregateNotificationArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByNotificationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueUserArgs: ["where"],
    FindFirstUserArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyUserArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateUserArgs: ["data"],
    CreateManyUserArgs: ["data", "skipDuplicates"],
    DeleteUserArgs: ["where"],
    UpdateUserArgs: ["data", "where"],
    DeleteManyUserArgs: ["where"],
    UpdateManyUserArgs: ["data", "where"],
    UpsertUserArgs: ["where", "create", "update"],
    AggregateUserArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByUserArgs: ["where", "orderBy", "by", "having", "take", "skip"]
};
function applyResolversEnhanceMap(resolversEnhanceMap) {
    for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
        const modelName = resolversEnhanceMapKey;
        const crudTarget = crudResolversMap[modelName].prototype;
        const resolverActionsConfig = resolversEnhanceMap[modelName];
        const actionResolversConfig = actionResolversMap[modelName];
        if (resolverActionsConfig._all) {
            const allActionsDecorators = resolverActionsConfig._all;
            const resolverActionNames = resolversInfo[modelName];
            for (const resolverActionName of resolverActionNames) {
                const actionTarget = actionResolversConfig[resolverActionName].prototype;
                for (const allActionsDecorator of allActionsDecorators) {
                    allActionsDecorator(crudTarget, resolverActionName, Object.getOwnPropertyDescriptor(crudTarget, resolverActionName));
                    allActionsDecorator(actionTarget, resolverActionName, Object.getOwnPropertyDescriptor(actionTarget, resolverActionName));
                }
            }
        }
        const resolverActionsToApply = Object.keys(resolverActionsConfig).filter(it => it !== "_all");
        for (const resolverActionName of resolverActionsToApply) {
            const decorators = resolverActionsConfig[resolverActionName];
            const actionTarget = actionResolversConfig[resolverActionName].prototype;
            for (const decorator of decorators) {
                decorator(crudTarget, resolverActionName, Object.getOwnPropertyDescriptor(crudTarget, resolverActionName));
                decorator(actionTarget, resolverActionName, Object.getOwnPropertyDescriptor(actionTarget, resolverActionName));
            }
        }
    }
}
exports.applyResolversEnhanceMap = applyResolversEnhanceMap;
function applyRelationResolversEnhanceMap(relationResolversEnhanceMap) {
    for (const relationResolversEnhanceMapKey of Object.keys(relationResolversEnhanceMap)) {
        const modelName = relationResolversEnhanceMapKey;
        const relationResolverTarget = relationResolversMap[modelName].prototype;
        const relationResolverActionsConfig = relationResolversEnhanceMap[modelName];
        if (relationResolverActionsConfig._all) {
            const allActionsDecorators = relationResolverActionsConfig._all;
            const relationResolverActionNames = relationResolversInfo[modelName];
            for (const relationResolverActionName of relationResolverActionNames) {
                for (const allActionsDecorator of allActionsDecorators) {
                    allActionsDecorator(relationResolverTarget, relationResolverActionName, Object.getOwnPropertyDescriptor(relationResolverTarget, relationResolverActionName));
                }
            }
        }
        const relationResolverActionsToApply = Object.keys(relationResolverActionsConfig).filter(it => it !== "_all");
        for (const relationResolverActionName of relationResolverActionsToApply) {
            const decorators = relationResolverActionsConfig[relationResolverActionName];
            for (const decorator of decorators) {
                decorator(relationResolverTarget, relationResolverActionName, Object.getOwnPropertyDescriptor(relationResolverTarget, relationResolverActionName));
            }
        }
    }
}
exports.applyRelationResolversEnhanceMap = applyRelationResolversEnhanceMap;
function applyTypeClassEnhanceConfig(enhanceConfig, typeClass, typePrototype, typeFieldNames) {
    if (enhanceConfig.class) {
        for (const decorator of enhanceConfig.class) {
            decorator(typeClass);
        }
    }
    if (enhanceConfig.fields) {
        if (enhanceConfig.fields._all) {
            const allFieldsDecorators = enhanceConfig.fields._all;
            for (const typeFieldName of typeFieldNames) {
                for (const allFieldsDecorator of allFieldsDecorators) {
                    allFieldsDecorator(typePrototype, typeFieldName);
                }
            }
        }
        const configFieldsToApply = Object.keys(enhanceConfig.fields).filter(it => it !== "_all");
        for (const typeFieldName of configFieldsToApply) {
            const fieldDecorators = enhanceConfig.fields[typeFieldName];
            for (const fieldDecorator of fieldDecorators) {
                fieldDecorator(typePrototype, typeFieldName);
            }
        }
    }
}
function applyModelsEnhanceMap(modelsEnhanceMap) {
    for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
        const modelName = modelsEnhanceMapKey;
        const modelConfig = modelsEnhanceMap[modelName];
        const modelClass = models[modelName];
        const modelTarget = modelClass.prototype;
        applyTypeClassEnhanceConfig(modelConfig, modelClass, modelTarget, modelsInfo[modelName]);
    }
}
exports.applyModelsEnhanceMap = applyModelsEnhanceMap;
function applyOutputTypesEnhanceMap(outputTypesEnhanceMap) {
    for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
        const outputTypeName = outputTypeEnhanceMapKey;
        const typeConfig = outputTypesEnhanceMap[outputTypeName];
        const typeClass = outputTypes[outputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, outputsInfo[outputTypeName]);
    }
}
exports.applyOutputTypesEnhanceMap = applyOutputTypesEnhanceMap;
function applyInputTypesEnhanceMap(inputTypesEnhanceMap) {
    for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
        const inputTypeName = inputTypeEnhanceMapKey;
        const typeConfig = inputTypesEnhanceMap[inputTypeName];
        const typeClass = inputTypes[inputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, inputsInfo[inputTypeName]);
    }
}
exports.applyInputTypesEnhanceMap = applyInputTypesEnhanceMap;
function applyArgsTypesEnhanceMap(argsTypesEnhanceMap) {
    for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
        const argsTypeName = argsTypesEnhanceMapKey;
        const typeConfig = argsTypesEnhanceMap[argsTypeName];
        const typeClass = argsTypes[argsTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, argsInfo[argsTypeName]);
    }
}
exports.applyArgsTypesEnhanceMap = applyArgsTypesEnhanceMap;
